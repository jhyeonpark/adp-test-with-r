# 제24회 실기 {.unnumbered}

# 1번 {.unnumbered}

> 데이터 설명은 다음과 같다: - 성별(sex) 바이너리 : 'F' - 여성 또는 'M' - 남성 - 나이(age) 숫자: 15 - 22 - 부모님동거여부 (Pstatus) 바이너리: T: 동거 또는 'A': 별거 - 엄마학력(Medu) 숫자 : 0 : 없음, 1 : 초등 교육, 2 : 5-9학년, 3 - 중등 교육 또는 4 - 고등 교육 - 아빠학력(Fedu) 숫자 : 0 : 없음, 1 : 초등 교육, 2 : 5-9학년, 3 - 중등 교육 또는 4 - 고등 교육 - 주보호자(guardian) 명목형 : '어머니', '아버지' 또는 '기타' - 등하교시간(traveltime) 숫자 : 1 : 15분이하, 2 : 15 \~ 30분, 3 : 30분 \~ 1시간, 4 : 1시간 이상 - 학습시간(studytime) 숫자 : 1 : 2시간이하, 2 : 2\~5시간, 3 : 5\~10시간, 4 : 10시간이상 - 학고횟수(failures) 숫자 : 1, 2, 3 else 4 - 자유시간(freetime) 숫자 : 1(매우 낮음), 2, 3, 4, 5(매우 높음) - 가족관계(famrel) 숫자 : 1(매우 나쁨), 2, 3, 4, 5(우수)

## 1-1번 {.unnumbered}

> 데이터 EDA를 하라.

EDA 결과는 다음과 같다.

-   데이터는 12개 변수와 395개 관측치로 구성
-   traveltime, freetime에서 결측치가 존재

```{r}
pacman::p_load(tidyverse, tidymodels, data.table, gt, skimr)

db_1a <- fread("test/24/problem1.csv")
db_1a %>% skim()
```

## 1-2번 {.unnumbered}

> 결측치 처리 및 변화 시각화, 추가 전처리가 필요하다면 이유와 기대효과를 설명하라.

결측치 대체 방법에는 여러가지가 있다.

-   단순 삭제법
    -   장점: 결측치에 대한 가정을 할 필요가 없어 처리가 간단하다.
    -   단점: 많은 데이터를 삭제하게 될 경우 정보 손실이 크고, 무작위로 누락된 데이터가 아닌 경우 편향을 초래할 수 있다.
-   평균값, 중앙값, 최빈값 대입 (Mean/Median/Mode Imputation)
    -   장점: 쉽고 빠른 방법이며, 무작위 결측치에 적합하다.
    -   단점: 데이터의 분포를 왜곡할 수 있고, 실제 분산을 과소평가할 수 있다. 또한 실제로 존재하지 않는 데이터를 가정하는 것이므로 주의해야한다.
-   회귀 대체법 (Regression Imputation)
    -   장점: 다른 변수들과의 관계를 활용하여 결측치를 대체할 수 있다.
    -   단점: 실제 분산을 과소평가할 수 있으며, 과적합(overfitting)을 일으킬 가능성이 있다.
-   머신러닝 기반 대체법 (Machine Learning Based Imputation)
    -   장점: 높은 정확성을 달성할 수 있으며, 다양한 패턴과 상관관계를 포착할 수 있다. (예: KNN, RandomForest 등)
    -   단점: 모델의 복잡성으로 인해 계산 비용이 높을 수 있으며, 오버피팅의 위험이 있다.

여기서는 중앙값 대입하여 결측치를 처리하고자 한다. 기존 데이터 관측치 395개 중 1% 내외에 해당하는 결측치 손실을 줄이고자 한다. 결측치가 존재하는 수치형 변수 중 age는 이산형이면서 연속형 속성 모두 가지고 있으므로, 평균 값을 부여하기 보다는 중간 값을 부여한다.

추가 전처리가 필요한 부분은 현재 Medu, Fedu 등이 명목형 변수지만 현재는 1, 2 등 수치로 표기되어 있다. 이를 분석에 용이하게 코딩할 필요가 있다.

위 전처리 과정을 처리하면 다음과 같다.

0 : 없음, 1 : 초등 교육, 2 : 5-9학년, 3 - 중등 교육 또는 4 - 고등 교육

```{r}
db_1b <- db_1a %>%
  recipe(absences ~ .) %>%
  # 결측치를 중간값으로 대체
  step_impute_median(age, traveltime, freetime) %>%
  step_mutate(
    Medu = factor(Medu, levels = c(0, 1, 2, 3, 4), labels = c("없음", "초등교육", "중등교육", "고등교육", "고등교육 이상"))) %>%
  step_dummy(Medu) %>%
  prep() %>% juice()

```

## 1-3번 {.unnumbered}

> 결석일수 예측모델을 2개 제시하고 선택한 근거 설명하라.

## 1-4번 {.unnumbered}

> 선정한 모델 2가지 생성 및 모델의 평가 기준을 선정하고 선정 이유 설명하라.

## 1-5번 {.unnumbered}

> 모델이 다양한 일상 상황에서도 잘 동작한다는 것을 설명하고 시각화하라.

## 1-6번 {.unnumbered}

> 모델 최적화 방안에 대해 구체적으로 설명하라.

# 2번 {.unnumbered}

> 광고횟수와 광고비에 따른 매출액의 데이터다.

## 2-1번 {.unnumbered}

> 광고비 변수를 가변수 처리후 다중회귀를 수행하여 회귀계수가 유의한지 검정하라.

## 2-2번 {.unnumbered}

> 회귀식이 유의한지 판단하라.

# 3번 {.unnumbered}

> A와 B 생산라인 각각에서 12개 제품을 샘플로 뽑았다. A 생산라인의 제품 평균은 5.7mm이고 표준편차는 0.03, B 생산라인의 제품 평균은 5.6mm이고 표준편차는 0.04라면 5% 유의수준으로 두 제품의 평균이 차이가 있는지 여부를 검정하라. 단, Z(0.05) = 1.65

## 3-1번 {.unnumbered}

> 귀무가설과 대립가설을 세워라.

연구 가설은 다음과 같다.

-   귀무가설: 생산라인 A와 B 제품의 평균은 같다.
-   연구가설: 생산라인 A와 B 제품의 평균은 차이가 있다.

## 3-2번 {.unnumbered}

> 두 평균이 차이가 있는 지를 검정하라.

둘 분산이 다르므로 등분산 가정 만족하지 않아 독립 t-test 시행

```{r}
# 데이터 설정
mean_A <- 5.7
std_A <- 0.03
n_A <- 12

mean_B <- 5.6
std_B <- 0.04
n_B <- 12

# 무작위 샘플 생성
set.seed(123)  # 일관된 결과를 얻기 위해 seed 설정
sample_A <- rnorm(n_A, mean_A, std_A)
sample_B <- rnorm(n_B, mean_B, std_B)

# Welch의 t 검정
t.test(sample_A, sample_B, var.equal = FALSE)  # 두 집단의 분산이 다르다고 가정



```

# 4번 {.unnumbered}

> 바이러스 감염 분류표를 보고 베이지안 분류 방법을 사용해 양성으로 예측된 사람이 실제로 양성일 확률을 구하라. 단, 유병률은 0.01로 알려져있다.

![](test/24/problem4.png){widbh="40%"}

베이즈 원리는 P(A\|B) = (P(B\|A) \* P(A)) / P(B)

-   B는 테스트 결과 양성, A는 실제로 양성
-   유병률이 0.01이므로 P(A) = 0.01
-   P(B\|A)는 양성이면서 테스트 결과가 양성인 경우며, 실제 양성 중 양성 예측인 370/385
-   P(B)는 P(B\|A) X P(A) + P(B\|Ac) X P(Ac); (370/385) X 0.01 + (10/700) X 0.99
-   .40

# 5번 {.unnumbered}

> 정규분포에서 9개 표본을 다음과 같이 추출하였다. \[3.1, 3.3, 3.5, 3.7, 3.9, 4.1, 4.3, 4.4, 4.7\]; 단, Z(0.05) = -1.65, Z(0.025) = -1.96, T(0.05, 8) = 1.860, T(0.025, 8) = 2.306

## 5-1번 {.unnumbered}

> 위 표본의 평균에 대한 신뢰구간을 95% 유의수준에서 구하라.

현재 표본은 정규분포를 띄고 있으며(검정 유의확률 \> 0.05), 모분산을 모르므로 t 검정을 실시한다.

```{r}
db_5a <- c(3.1, 3.3, 3.5, 3.7, 3.9, 4.1, 4.3, 4.4, 4.7)
stats::shapiro.test(db_5a)
```

```{r}
upper_bound <- mean(db_5a) + 2.306 * sd(db_5a) / sqrt(length(db_5a))
lower_bound <- mean(db_5a) - 2.306 * sd(db_5a) / sqrt(length(db_5a))

cat("유의확률 : [", lower_bound, ", ", upper_bound, "]")
```

## 5-2번 {.unnumbered}

> 과거에 해당 표본의 모집단의 표준편차가 0.4라는 것을 알고 있을 때, 신뢰구간을 구하라.

과거 정규분포의 편차를 알고 있다면 z 검정을 실시한다.

```{r}
upper_bound <- mean(db_5a) + 1.96 * 0.4 / sqrt(length(db_5a))
lower_bound <- mean(db_5a) - 1.96 * 0.4 / sqrt(length(db_5a))

cat("유의확률 : [", lower_bound, ", ", upper_bound, "]")
```

# 참고한 사이트

-   https://lovelydiary.tistory.com/381
-   https://velog.io/@rkdus0440/%EC%A0%9C-24%ED%9A%8C-ADP-%EC%8B%A4%EA%B8%B0-%EB%B3%B5%EA%B8%B0
